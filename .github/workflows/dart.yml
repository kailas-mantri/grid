# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
          channel: 'stable'

      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk-version: '3.3.4'

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test

      # Build APK
      - name: Build app
        run: |
          flutter build apk --release #change to relavent target (i.e. ios, web)

      # Upload APK as artifact (Optional step)
      #- name: Upload APK as artifact
      #  if: success()  # Only upload if the build was successful
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: flutter-apk
      #    path: build/app/outputs/flutter-apk/*.apk

  build_ios:
    runs-on: macos-latest #for IOS IPA Build 
    needs: build #Ensure the build job for Android completes before ios build start
    steps:
      # checkout the code from the repository
      - uses: actions/checkout@v4

      # setup the flutter
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
          channel: 'stable'

      # Install flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Analyze the project for errors
      - name: Analyze Project source
        run: flutter analyze

      # Run Tests
      - name: Run Tests
        run: flutter test

      # Build IPA
      - name: Build IPA
        run: |
          flutter build ios -- release --no-codesign #Avoid code sign in CI

      # Upload IPA as artifact (Optional step)
      #- name: Upload IPA as artifact
      #  if: success()  # Only upload if the build was successful
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: flutter-ipa
      #    path: build/ios/iphoneos/*.ipa
      
